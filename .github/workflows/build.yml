name: build
on: [push, pull_request]

jobs:
  mononoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - uses: actions/checkout@v4
      - uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.7
          args: --timeout=5m
          skip-cache: true
      - run: go mod download
      - run: make test-coverage
      - if: startsWith(github.ref, 'refs/tags/v')
      - run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - if: startsWith(github.ref, 'refs/tags/v')
      - run: |
          export LD_FLAGS="-w -s -X main.Version=$VERSION -X main.BuildDate=$(date "+%F-%T") -X main.Commit=$(git rev-parse --verify HEAD) "
          echo "LD_FLAGS=$LD_FLAGS" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_REPO=${{ vars.DOCKER_IMAGE_REPO }}" >> $GITHUB_ENV
          echo "DOCKER_ORG=${{ vars.DOCKER_ORG }}" >> $GITHUB_ENV
          sudo apt-get update && sudo apt-get install -y libc6-dev-i386 gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf gcc-aarch64-linux-gnu g++-aarch64-linux-gnu mingw-w64

          make build
          sudo chown -R $UID build
          make package-zip
          ls -lath build
      - if: startsWith(github.ref, 'refs/tags/v')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - if: startsWith(github.ref, 'refs/tags/v')
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - if: startsWith(github.ref, 'refs/tags/v')
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_GHCR_USER }}
          password: ${{ secrets.DOCKER_GHCR_PASS }}
      - if: startsWith(github.ref, 'refs/tags/v')
      - run: |
          make DOCKER_BUILD_PUSH=true build-docker
      - if: startsWith(github.ref, 'refs/tags/v')
      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          file: build/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true